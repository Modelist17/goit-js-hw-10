{"version":3,"file":"commonHelpers2.js","sources":["../src/img/izitoast-ok.svg","../src/js/2-snackbar.js"],"sourcesContent":["export default \"__VITE_ASSET__89fb508c__\"","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nimport errorIcon from '../img/izitoast-icon.svg';\nimport closeIcon from '../img/izitoast-close.svg';\nimport okIcon from '../img/izitoast-ok.svg';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]').value;\n  const stateInputs = document.querySelectorAll('input[name=\"state\"]');\n  const selectedState = [...stateInputs].find(input => input.checked);\n\n  if (!delayInput || !selectedState) {\n    showCustomToast(\n      'warning',\n      'Please fill the fields',\n      'warning-message',\n      '#FFA000',\n      warningIcon\n    );\n    return;\n  }\n\n  const delay = parseInt(delayInput);\n  const promise = new Promise((resolve, reject) => {\n    let timeoutId = setTimeout(() => {\n      if (selectedState.value === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(delay => {\n      showCustomToast(\n        'OK',\n        `Fulfilled promise in ${delay}ms`,\n        'success-message',\n        '#59A10D',\n        okIcon\n      );\n      form.reset();\n    })\n    .catch(delay => {\n      showCustomToast(\n        'Error',\n        `Rejected promise in ${delay}ms`,\n        'warning-message',\n        '#ef4040',\n        errorIcon\n      );\n      form.reset();\n    });\n});\n\nfunction showCustomToast(title, message, className, backgroundColor, iconUrl) {\n  iziToast.show({\n    messageSize: 'auto',\n    title: title,\n    message: message,\n    class: className,\n    position: 'topCenter',\n    titleColor: '#ffffff',\n    titleSize: '16px',\n    titleLineHeight: '1.5',\n    messageColor: '#ffffff',\n    messageSize: '16px',\n    messageLineHeight: '1.5',\n    backgroundColor: backgroundColor,\n    iconColor: '#ffffff',\n    iconUrl: iconUrl,\n    imageWidth: 50,\n    timeout: 10000,\n    close: false,\n    buttons: [\n      [\n        `<button type=\"button\" style=\"background-color: ${backgroundColor}\"><img src=${closeIcon}></button>`,\n        function (instance, toast) {\n          instance.hide({ transitionOut: 'fadeOut' }, toast);\n        },\n      ],\n    ],\n    closeOnEscape: true,\n    pauseOnHover: false,\n  });\n}\n"],"names":["okIcon","form","e","delayInput","selectedState","input","showCustomToast","delay","resolve","reject","errorIcon","title","message","className","backgroundColor","iconUrl","iziToast","closeIcon","instance","toast"],"mappings":"+JAAA,MAAeA,EAAA,iDCQTC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAG,CAC3CA,EAAE,eAAc,EAEhB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EAAE,MAE3DC,EAAgB,CAAC,GADH,SAAS,iBAAiB,qBAAqB,CAC9B,EAAE,KAAKC,GAASA,EAAM,OAAO,EAElE,GAAI,CAACF,GAAc,CAACC,EAAe,CACjCE,EACE,UACA,yBACA,kBACA,UACA,WACN,EACI,MACD,CAED,MAAMC,EAAQ,SAASJ,CAAU,EACjB,IAAI,QAAQ,CAACK,EAASC,IAAW,CAC/B,WAAW,IAAM,CAC3BL,EAAc,QAAU,YAC1BI,EAAQD,CAAK,EAEbE,EAAOF,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGE,KAAKA,GAAS,CACbD,EACE,KACA,wBAAwBC,CAAK,KAC7B,kBACA,UACAP,CACR,EACMC,EAAK,MAAK,CAChB,CAAK,EACA,MAAMM,GAAS,CACdD,EACE,QACA,uBAAuBC,CAAK,KAC5B,kBACA,UACAG,CACR,EACMT,EAAK,MAAK,CAChB,CAAK,CACL,CAAC,EAED,SAASK,EAAgBK,EAAOC,EAASC,EAAWC,EAAiBC,EAAS,CAC5EC,EAAS,KAAK,CACZ,YAAa,OACb,MAAOL,EACP,QAASC,EACT,MAAOC,EACP,SAAU,YACV,WAAY,UACZ,UAAW,OACX,gBAAiB,MACjB,aAAc,UACd,YAAa,OACb,kBAAmB,MACnB,gBAAiBC,EACjB,UAAW,UACX,QAASC,EACT,WAAY,GACZ,QAAS,IACT,MAAO,GACP,QAAS,CACP,CACE,kDAAkDD,CAAe,cAAcG,CAAS,aACxF,SAAUC,EAAUC,EAAO,CACzBD,EAAS,KAAK,CAAE,cAAe,SAAW,EAAEC,CAAK,CAClD,CACF,CACF,EACD,cAAe,GACf,aAAc,EAClB,CAAG,CACH"}